{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";;;;;;;;AAQA,IAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAM,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACvC,IAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAE/B,IAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,IAAM,oBAAoB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC7D,IAAM,MAAM,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC;AAC9C,IAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC;AACxC,IAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC;AACxC,IAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAErC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC;;AAEtB,eAAS,oBAAoB;;;;;AAK7B,gBAAY,EAAE,wBAAY;AACtB,YAAI,CAAC,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AACnE,YAAI,CAAC,cAAc,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KAC9D;;;;;AAKD,mBAAe,EAAE,yBAAU,IAAI,EAAE,EAChC;;;AAGD,eAAW,EAAE,qBAAU,IAAI,EAAE,EAC5B;;;;;;;AAOD,4BAAwB,EAAE,kCAAU,GAAG,EAAE;AACrC,WAAG,CAAC,QAAQ,EAAE,CAAC;KAClB;;;;;AAKD,8BAA0B,EAAE,oCAAU,GAAG,EAAE;AACvC,WAAG,CAAC,QAAQ,EAAE,CAAC;KAClB;;CAGJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "/*\n * 与CS服务模块的SOCKET通讯\n * @Author: thor.liu \n * @Date: 2016-12-03 14:47:33 \n * @Last Modified by: thor.liu\n * @Last Modified time: 2016-12-15 15:45:23\n */\n\nconst MVC = require(\"FWS_MVC\");\nconst MODEL = require(\"FWS_MODEL\");\nconst DATA = require(\"FWS_MODEL_DATA\");\nconst MSG = require(\"FWS_MSG\");\n\nconst FSocketPack = require(\"FSocketPack\");\nconst FSocketModelAbstract = require(\"FSocketModelAbstract\");\nconst NOTIFY = FSocketPack.FHeaderMark.Notify;\nconst REQ = FSocketPack.FHeaderMark.Req;\nconst ACK = FSocketPack.FHeaderMark.Ack;\nconst MSGIDS = FSocketPack.MsgIDs[0];\n\nmodule.exports = cc.Class({\n    // name: \"FSocketCSModel\",\n    extends: FSocketModelAbstract,\n    // ctor: function() {},\n\n    //────────────────────────────────────────────────────────── 网络通讯\n\n    initHandlers: function () {\n        this.addPackHandler(NOTIFY | MSGIDS.Relogin, this.onNotifyRelogin);\n        this.addPackHandler(ACK | MSGIDS.Verify, this.onAckVerify);\n    },\n\n    //────────────────────────────────────────────────────────── 数据包处理\n\n    ///异地登录后通知下线\n    onNotifyRelogin: function (pack) {\n    },\n\n    ///身份验证结果\n    onAckVerify: function (pack) {\n    },\n\n    //────────────────────────────────────────────────────────── 连接服务器\n\n    /**\n     * 连接服务器\n     */\n    onFMessage_serverConnect: function (msg) {\n        msg.complete();\n    },\n\n    /**\n     * 连接服务器结果\n     */\n    onFMessage_socketOnConnect: function (msg) {\n        msg.complete();\n    }\n\n\n});"
  ]
}