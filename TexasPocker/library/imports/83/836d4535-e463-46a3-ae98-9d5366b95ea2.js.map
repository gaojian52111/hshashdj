{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";;;;;;;;AASA,IAAM,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC;AACzB,QAAI,EAAE,aAAa;AACnB,QAAI,EAAE,gBAAY,EAEjB;;AAED,WAAO,EAAE;;AAEL,eAAO,EAAE,CAAC;;;AAGV,mBAAW,EAAE,EAAE,CAAC,IAAI,CAAC;AACjB,kBAAM,EAAkB,UAAU;AAClC,eAAG,EAAqB,UAAU;AAClC,eAAG,EAAqB,UAAU;SACrC,CAAC;;;AAGF,mBAAW,EAAE,EAAE,CAAC,IAAI,CAAC;AACjB,gBAAI,EAAoB,UAAU;AAClC,eAAG,EAAqB,UAAU;SACrC,CAAC;;;AAGF,cAAM,EAAE,CACJ;AACI,iBAAK,EAAe,CAAC;;AAErB,qBAAS,EAAW,IAAI;AACxB,gBAAI,EAAgB,IAAI;AACxB,mBAAO,EAAa,IAAI;AACxB,kBAAM,EAAc,IAAI,EAC3B,CACJ;;;;AAGD,qBAAa,EAAE,uBAAU,EAAE,EAAE;AACzB,mBAAQ,EAAE,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAE;SAC9C;;;AAGD,sBAAc,EAAE,wBAAU,EAAE,EAAE;AAC1B,mBAAQ,EAAE,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAE;SAC7C;;;AAGD,oBAAY,EAAE,sBAAU,EAAE,EAAE;AACxB,gBAAI,CAAC,GAAG,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACtC,gBAAI,CAAC,GAAG,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;;AAEvC,gBAAI,IAAI,GAAG,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAClE,gBAAI,IAAI,GAAG,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAE/D,gBAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,uBAAO,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;aAC9B,MACI;AACD,uBAAO,IAAI,CAAC;aACf;SACJ;;;AAGD,sBAAc,EAAE,wBAAU,CAAC,EAAE,CAAC,EAAE;AAC5B,iBAAK,IAAI,CAAC,IAAI,CAAC,EAAE;AACb,oBAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;aAC3B;AACD,mBAAO,EAAE,CAAC;SACb;;;AAGD,wBAAgB,EAAE,0BAAU,EAAE,EAAE,CAAC,EAAE;AAC/B,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChC,oBAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACd,qBAAK,IAAI,CAAC,IAAI,CAAC,EAAE;AACb,wBAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;iBAC3B;aACJ;AACD,mBAAO,EAAE,CAAC;SACb;KACJ;;AAED,cAAU,EAAE;;AAER,YAAI,EAAE,CAAC;AACP,aAAK,EAAE,CAAC;;;AAGR,eAAO,EAAE,CAAC;AACV,aAAK,EAAE,EAAE;AACT,cAAM,EAAE,EAAE;;;AAGV,YAAI,EAAE,IAAI;KACb;;CAEJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "/*\n * Socket数据包信息\n * @Author: thor.liu \n * @Date: 2016-12-06 16:46:25 \n * @Last Modified by: thor.liu\n * @Last Modified time: 2016-12-15 15:19:30\n */\n\n\nconst FSocketPack = cc.Class({\n    name: \"FSocketPack\",\n    ctor: function () {\n\n    },\n\n    statics: {\n\n        version: 0,\n\n        ///消息号类型\n        FHeaderType: cc.Enum({\n            Notify:                 0x00000000,         //广播消息\n            Req:                    0x10000000,         //请求消息\n            Ack:                    0x20000000          //应答消息\n        }),\n\n        ///消息号掩码\n        FHeaderMark: cc.Enum({\n            Mask:                   0xF0000000,         //类型\n            MSG:                    0x0FFFFFFF          //接口号\n        }),\n\n        ///协议消息号定义\n        MsgIDs: [\n            {\n                Reply:              0,                  //回复\n\n                HeartBeat:          5001,               //心跳\n                Ping:               5002,               //链路检测包\n                Relogin:            5003,               //异地登录后的下线通知\n                Verify:             5004,               //客户端身份认证\n            }\n        ],\n\n        ///获取消息号的掩码部分\n        getHeaderMark: function (id) {\n            return (id & FSocketPack.FHeaderMark.Mask);\n        },\n\n        ///获取消息号的接口号部分\n        getHeaderMsgId: function (id) {\n            return (id & FSocketPack.FHeaderMark.MSG);\n        },\n\n        ///获取消息号的文本信息\n        getMsgIdDesc: function (id) {\n            var a = FSocketPack.getHeaderMark(id);\n            var b = FSocketPack.getHeaderMsgId(id);\n\n            var sz_a = FSocketPack.getEnumByValue(FSocketPack.FHeaderType, a);\n            var sz_b = FSocketPack.getEnumByValueEx(FSocketPack.MsgIDs, b);\n\n            if (sz_a && sz_a.length) {\n                return sz_a + \" | \" + sz_b;\n            }\n            else {\n                return sz_b;\n            }\n        },\n\n        ///获取枚举值的名称\n        getEnumByValue: function (e, v) {\n            for (var k in e) {\n                if (e[k] == v) return k;\n            }\n            return \"\";\n        },\n\n        ///获取枚举值的名称\n        getEnumByValueEx: function (es, v) {\n            for (var i = 0; i < es.length; i++) {\n                var e = es[i];\n                for (var k in e) {\n                    if (e[k] == v) return k;\n                }\n            }\n            return \"\";\n        }\n    },\n\n    properties: {\n        //-----\n        type: 0,\n        msgid: 0,\n\n        //-----\n        retcode: 0,\n        extra: \"\",\n        router: \"\",\n\n        //-----\n        body: null\n    }\n\n});\n\nmodule.exports = FSocketPack;"
  ]
}