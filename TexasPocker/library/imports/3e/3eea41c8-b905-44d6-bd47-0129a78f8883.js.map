{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";;;;;;;AAOA,IAAM,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC;AACvB,QAAI,EAAE,WAAW;AACjB,QAAI,EAAE,gBAAW,EAAE;;AAEnB,WAAO,EAAE;AACL,YAAI,EAAE,EAAE;AACR,YAAI,EAAE,gBAAW;AACb,gBAAI,SAAS,CAAC,MAAM,EAAE,OAAO;AAC7B,qBAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AACxB,qBAAS,CAAC,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;SACjC;;;;;AAKD,YAAI,EAAE,cAAS,QAAQ,EAAE;AACrB,gBAAI,QAAQ,EAAE;;;AAGV,oBAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;;;AAG9C,oBAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;;;AAGjC,oBAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;;;AAGjC,oBAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAErC,oBAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC1B,oBAAI,CAAC,GAAG,CAAC,EAAE;AACP,wBAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,wBAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3B,6BAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACzB;aACJ;SACJ;;;;;AAKD,gBAAQ,EAAE,kBAAS,QAAQ,EAAE;AACzB,gBAAI,QAAQ,IAAI,OAAO,QAAQ,AAAC,IAAI,QAAQ,EAAE;AAC1C,oBAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;AAEvC,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,wBAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,6BAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACxB;aACJ;SACJ;;;;;AAKD,YAAI,EAAE,cAAS,SAAS,EAAE,UAAU,EAAE;AAClC,gBAAI,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACxC,uBAAO,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACpC;;AAED,gBAAI,UAAU,IAAI,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC1C,uBAAO,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACrC;;AAED,mBAAO,EAAE,CAAC;SACb;;;;;AAKD,cAAM,EAAE,kBAAW;AACf,gBAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAC1D,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAC7E;AACD,oBAAI,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7B,oBAAI,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC9B,oBAAI,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;;AAEhD,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,wBAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAClB,wBAAI,EAAE,GAAG,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;;AAE5D,uBAAG,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC;;AAED,uBAAO,GAAG,CAAC;aACd;SAEJ;KACJ;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "/*\n * 多语言支持\n * @Author: thor.liu \n * @Date: 2016-12-05 17:57:50 \n * @Last Modified by: thor.liu\n * @Last Modified time: 2016-12-05 18:50:05\n */\nconst FLanguage = cc.Class({\n    name: \"FLanguage\",\n    ctor: function() {},\n\n    statics: {\n        data: {},\n        init: function() {\n            if (FLanguage.inited) return;\n            FLanguage.inited = true;\n            FLanguage.data = new Object();\n        },\n\n        /**\n         * 加载一行文本\n         */\n        load: function(ini_line) {\n            if (ini_line) {\n\n                //移除ini注释\n                var line = ini_line.replace(/#[^\\r\\n]*/g, \"\");\n\n                //移除前面的空白\n                line = line.replace(/^\\s+/g, \"\");\n\n                //移除后面的空白\n                line = line.replace(/\\s+$/g, \"\");\n\n                //转换\\n\n                line = line.replace(/(\\\\n)+/g, \"\\n\");\n\n                var i = line.indexOf(\"=\");\n                if (i > 0) {\n                    var k = line.substr(0, i);\n                    var v = line.substr(i + 1);\n                    FLanguage.data[k] = v;\n                }\n            }\n        },\n\n        /**\n         * 加载语言文件的内容\n         */\n        loadFile: function(ini_file) {\n            if (ini_file && typeof(ini_file) == \"string\") {\n                var lines = ini_file.split(/[\\r\\n]+/g);\n\n                for (var i = 0; i < lines.length; i++) {\n                    var line = lines[i];\n                    FLanguage.load(line);\n                }\n            }\n        },\n\n        /**\n         * 获取指定key的文本\n         */\n        text: function(targetKey, defaultKey) {\n            if (targetKey && FLanguage.data[targetKey]) {\n                return FLanguage.data[targetKey];\n            }\n\n            if (defaultKey && FLanguage.data[defaultKey]) {\n                return FLanguage.data[defaultKey];\n            }\n\n            return \"\";\n        },\n\n        /**\n         * 根据key以及参数格式化文本\n         */\n        format: function() {\n            if (arguments.length == 1) return FLanguage.text(arguments[0]);\n            else if (arguments.length == 2) return FLanguage.text(arguments[0], arguments[1]);\n            else {\n                var targetKey = arguments[0];\n                var defaultKey = arguments[1];\n                var ret = FLanguage.text(targetKey, defaultKey);\n\n                for (var i = 2; i < arguments.length; i++) {\n                    var index = i - 1; //参数从{1}开始\n                    var re = new RegExp(\"\\\\{\" + index.toString() + \"\\\\}\", \"gm\");\n\n                    ret = ret.replace(re, arguments[i]);\n                }\n\n                return ret;\n            }\n\n        }\n    }\n});\n\nmodule.exports = FLanguage;"
  ]
}