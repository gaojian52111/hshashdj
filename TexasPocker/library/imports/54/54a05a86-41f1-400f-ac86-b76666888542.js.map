{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "/*\n * 公共代码的MVC框架\n * @Author: thor.liu \n * @Date: 2016-11-25 10:40:31 \n * @Last Modified by: thor.liu\n * @Last Modified time: 2016-12-05 17:19:42\n */\n\nconst FWS_MVC = {};\n\n/**\n * 日志功能\n */\nFWS_MVC.FLog = cc.Class({\n        name: \"FLog\",\n        statics: {\n            /**\n             * 输出信息类日志\n             */\n            info: function(tags, template) {\n                var args = new Array();\n                args.push(\"INFO\");\n                for (var i = 0; i < arguments.length; i++) {\n                    args.push(arguments[i]);\n                }\n                FWS_MVC.FLog.output(args);\n            },\n            /**\n             * 输出警告类日志\n             */\n            warn: function(tags, template) {\n                var args = new Array();\n                args.push(\"WARN\");\n                for (var i = 0; i < arguments.length; i++) {\n                    args.push(arguments[i]);\n                }\n                FWS_MVC.FLog.output(args);\n            },\n            /**\n             * 输出错误类日志\n             */\n            err: function(tags, template) {\n                var args = new Array();\n                args.push(\"ERROR\");\n                for (var i = 0; i < arguments.length; i++) {\n                    args.push(arguments[i]);\n                }\n                FWS_MVC.FLog.output(args);\n            },\n            /**\n             * 输出数据类日志\n             */\n            data: function(tags, template) {\n                var args = new Array();\n                args.push(\"DATA\");\n                for (var i = 0; i < arguments.length; i++) {\n                    args.push(arguments[i]);\n                }\n                FWS_MVC.FLog.output(args);\n            },\n            /**\n             * 输出日志信息至控制台, 或者之后看情况去写日志文件, 或者发给日志服务\n             */\n            output: function(args) {\n                if (args.length < 3) return;\n                var type = args[0];\n                var tags = args[1];\n                var format = args[2] + \"\";\n\n                for (var i = 3; i < args.length; i++) {\n                    format = format.replace(\"{\" + (i - 3) + \"}\", args[i]);\n                }\n\n                var output = \"(\" + tags + \") \" + format;\n\n                if (type == \"INFO\") {\n                    cc.info(output);\n                } else if (type == \"ERROR\") {\n                    cc.error(output);\n                } else if (type == \"WARN\") {\n                    cc.warn(output);\n                } else {\n                    cc.log(output);\n                }\n                //TODO: 写一个文本文件\n            }\n        }\n    }),\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 消息通知\n     */\n    FWS_MVC.FMessage = cc.Class({\n        name: \"FMessage\",\n        ctor: function() {\n\n            var msgType = arguments[0];\n            var msgCategory = arguments[1];\n\n            this._type = msgType;\n            this._category = msgCategory;\n            this._index = FWS_MVC.FMessage._nextIndex;\n            FWS_MVC.FMessage._nextIndex++;\n\n            this._isSended = false;\n            this._isCompleted = false;\n            this.args = new Object();\n        },\n\n        statics: {\n            _nextIndex: 0\n        },\n\n        /**\n         * 获取消息类型\n         */\n        type: function() { return this._type; },\n\n        /**\n         * 获取消息分类\n         */\n        category: function() { return this._category; },\n        /**\n         * 获取消息是否已经完成\n         */\n        isCompleted: function() { return this._isCompleted; },\n        /**\n         * 获取消息是否已经发送\n         */\n        isSended: function() { return this._isSended; },\n        /**\n         * 发送消息到消息路由\n         */\n        send: function() {\n            if (this._isSended) return;\n            this._isSended = true;\n\n            FWS_MVC.FMessageRouter.send(this);\n        },\n        /**\n         * 通知消息已经完成\n         */\n        complete: function() {\n            if (!this._isSended) return;\n            if (this._isCompleted) return;\n            this._isCompleted = true;\n\n            FWS_MVC.FMessageRouter.complete(this);\n        },\n        /**\n         * 获取消息的文本信息\n         */\n        toString: function() {\n            return \"<FMessage \" + this._type + \"(\" + this._category + \" : \" + this._index + \") \" + JSON.stringify(this.args) + \">\";\n        }\n\n    }),\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 消息队列\n     */\n    FWS_MVC.FMessageQueue = cc.Class({\n        name: \"FMessageQueue\",\n        ctor: function() {\n            var msgCategory = arguments[0];\n            this._category = msgCategory;\n            this._messages = new Array();\n        },\n        /**\n         * 获取消息队列所绑定的消息分类\n         */\n        category: function() { return this._category; },\n        /**\n         * 获取消息队列的当前消息, 也就是队列中最前面的那个消息\n         */\n        current: function() {\n            if (this._messages.length > 0) return this._messages[0];\n            return null;\n        },\n        /**\n         * 获取消息队列中所包含的消息数量\n         */\n        count: function() {\n            return this._messages.length;\n        },\n        /**\n         * 添加一个消息至消息队列的尾部\n         */\n        add: function(msg) {\n\n            if (!(msg instanceof FWS_MVC.FMessage)) {\n                FWS_MVC.FLog.err(\"FMessageQueue\", \"{0}不是一个正确的消息通知对象\", msg);\n            } else if (this._messages.indexOf(msg) >= 0) {\n                FWS_MVC.FLog.err(\"FMessageQueue\", \"消息队列中已经包含了{0}\", msg);\n            } else {\n                this._messages.push(msg);\n            }\n        },\n        /**\n         * 移除并返回消息队列中最前面的那个消息\n         */\n        remove: function() {\n            if (this._messages.length > 0) return this._messages.shift();\n            return null;\n        },\n        /**\n         * 清空消息队列中的所有消息\n         */\n        clear: function() {\n            if (this._messages.length > 0) this._messages.splice(0, this._messages.length);\n        },\n        /**\n         * 获取消息队列的文本信息\n         */\n        toString: function() {\n            return \"<FMessageQueue \" + this._messages.toString() + \">\";\n        }\n    }),\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 消息连接类\n     */\n    FWS_MVC.FMessageConnection = cc.Class({\n        // name: \"FMessageConnection\",\n        extends: cc.Component,\n\n        /**\n         * 连接模块至消息路由\n         */\n        connect: function() {\n            FWS_MVC.FMessageRouter.connect(this);\n        },\n\n        /**\n         * 从消息路由断开连接 \n         */\n        disconnect: function() {\n            FWS_MVC.FMessageRouter.disconnect(this);\n        },\n\n        /**\n         * 收到消息通知时, 直接按消息的类型加onFMessage_的前缀定义函数名作侦听, 例如: onFMessage_Login: function(msg) {...}\n         */\n        onFMessage: function(msg) {\n            var handler = \"onFMessage_\" + msg.type();\n            if (typeof(this[handler]) == \"function\") {\n                this[handler](msg);\n                return true;\n            }\n\n            return false;\n        }\n    }),\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 消息路由 (全局唯一)\n     */\n    FWS_MVC.FMessageRouter = cc.Class({\n        name: \"FMessageRouter\",\n\n        statics: {\n\n            /**\n             * 初始化消息路由\n             */\n            init: function() {\n                if (FWS_MVC.FMessageRouter.queues) return;\n                FWS_MVC.FMessageRouter.queues = new Object();\n                FWS_MVC.FMessageRouter.connections = new Array();\n                FWS_MVC.FMessageRouter.inited = true;\n                FWS_MVC.FMessageRouter.updateHandler = setInterval(FWS_MVC.FMessageRouter.update, 100);\n            },\n\n            /**\n             * 创建一个指定消息分类的消息队列\n             */\n            createQueue: function(category) {\n                FWS_MVC.FMessageRouter.init();\n\n                if (FWS_MVC.FMessageRouter.queues[category]) return;\n\n                FWS_MVC.FMessageRouter.queues[category] = new FWS_MVC.FMessageQueue(category);\n            },\n\n            /**\n             * 移除一个指定消息分类的消息队列\n             */\n            removeQueue: function(category) {\n                FWS_MVC.FMessageRouter.init();\n\n                if (FWS_MVC.FMessageRouter.queues[category]) delete FWS_MVC.FMessageRouter.queues[category];\n            },\n\n            /**\n             * 移除所有的消息队列\n             */\n            removeAllQueue: function() {\n                FWS_MVC.FMessageRouter.init();\n\n                for (var category in FWS_MVC.FMessageRouter.queues) {\n                    delete FWS_MVC.FMessageRouter.queues[category];\n                }\n            },\n\n            /**\n             * 清空指定消息分类的消息队列的内容\n             */\n            cleanQueue: function(category) {\n                FWS_MVC.FMessageRouter.init();\n\n                for (var cat in FWS_MVC.FMessageRouter.queues) {\n                    if (cat != category) continue;\n                    var q = FWS_MVC.FMessageRouter.queues[category];\n                    q.clear();\n                }\n            },\n\n            /**\n             * 清空所有消息队列的内容\n             */\n            cleanAllQueue: function() {\n                FWS_MVC.FMessageRouter.init();\n\n                for (var category in FWS_MVC.FMessageRouter.queues) {\n                    var q = FWS_MVC.FMessageRouter.queues[category];\n                    q.clear();\n                }\n            },\n\n            /**\n             * 连接一个模块到消息路由\n             */\n            connect: function(connection) {\n                FWS_MVC.FMessageRouter.init();\n\n                if (connection) {\n                    if (FWS_MVC.FMessageRouter.connections.indexOf(connection) >= 0) {\n                        FWS_MVC.FLog.warn(\"FMessageRouter\", \"在消息路由中发现重复连接的模块{0}\", connection);\n                    } else {\n                        FWS_MVC.FMessageRouter.connections.push(connection);\n                    }\n                }\n            },\n\n            /**\n             * 从消息路由断开一个连接\n             */\n            disconnect: function(connection) {\n                FWS_MVC.FMessageRouter.init();\n                if (connection) {\n                    var i = FWS_MVC.FMessageRouter.connections.indexOf(connection);\n                    if (i >= 0) {\n                        FWS_MVC.FMessageRouter.connections.splice(i, 1);\n                    }\n                }\n            },\n\n            /**\n             * 断开消息路由中的所有连接\n             */\n            disconnectAll: function() {\n                FWS_MVC.FMessageRouter.init();\n\n                if (FWS_MVC.FMessageRouter.connections.length > 0) {\n                    FWS_MVC.FMessageRouter.connections.splice(0, FWS_MVC.FMessageRouter.connections.length);\n                }\n            },\n\n            /**\n             * 向消息路由发送一个消息 (并不是马上发布到各模块, 只是入队列)\n             */\n            send: function(msg) {\n                FWS_MVC.FMessageRouter.init();\n\n                FWS_MVC.FLog.data(\"消息\", \"发送: {0}\", msg);\n\n                if (msg instanceof FWS_MVC.FMessage) {\n                    for (var category in FWS_MVC.FMessageRouter.queues) {\n                        var q = FWS_MVC.FMessageRouter.queues[category];\n                        q.add(msg);\n\n                        if (q.count() == 1) {\n                            FWS_MVC.FMessageRouter.push(msg);\n                        }\n                        return;\n                    }\n\n                    FWS_MVC.FMessageRouter.push(msg);\n                }\n            },\n\n            /**\n             * 推送一个消息到所有连接\n             */\n            push: function(msg) {\n                FWS_MVC.FMessageRouter.init();\n\n                FWS_MVC.FLog.info(\"消息\", \"推送: {0}\", msg);\n\n                var cloneArray = FWS_MVC.FMessageRouter.connections.slice(0);\n                var counter = 0;\n                for (var i = 0; i < cloneArray.length; i++) {\n                    var conn = cloneArray[i];\n                    if (typeof(conn.onFMessage) == \"function\") {\n                        if (conn.onFMessage(msg)) {\n                            counter++;\n                        }\n                    }\n                }\n\n                if (counter == 0) {\n                    msg.complete();\n                    FWS_MVC.FLog.warn(\"消息\", \"丢弃了一个未处理的消息通知: {0}\", msg);\n                }\n            },\n\n            /**\n             * 标记一个消息已经完成\n             */\n            complete: function(msg) {\n                FWS_MVC.FMessageRouter.init();\n                FWS_MVC.FLog.data(\"消息\", \"完成消息: {0}\", msg);\n            },\n\n            /**\n             * 更新操作\n             */\n            update: function() {\n                for (var category in FWS_MVC.FMessageRouter.queues) {\n                    var queue = FWS_MVC.FMessageRouter.queues[category];\n\n                    if (queue.current() && queue.current().isCompleted()) {\n                        queue.remove();\n                        if (queue.current()) FWS_MVC.FMessageRouter.push(queue.current());\n                    }\n                }\n            }\n        }\n    }),\n\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 树形节点结构\n     */\n    FWS_MVC.FNode = cc.Class({\n        name: \"FNode\",\n        ctor: function() {\n            var nodeid = arguments[0];\n            this._id = nodeid;\n            this._nodes = new Array();\n            this._data = null;\n            this._parent = null;\n        },\n\n        toString: function() {\n            return \"<\" + cc.js.getClassName(this) + \" \" + this.id() + \">\";\n        },\n\n        /**\n         * 获取节点的标识\n         */\n        id: function() {\n            return this._id;\n        },\n\n        /**\n         * 获取所属的父节点\n         */\n        parent: function() {\n            return this._parent;\n        },\n\n        /**\n         * 获取节点的全路径\n         */\n        path: function() {\n            var ary = new Array();\n\n            var n = this;\n\n            while (n) {\n                ary.splice(0, 0, n.id());\n                n = n.parent();\n            }\n\n            return ary.join(\"/\");\n        },\n\n        /**\n         * 获取子节点的数组\n         */\n        nodes: function() {\n            return this._nodes.slice(0);\n        },\n\n        /**\n         * 获取一个指定id的子节点\n         */\n        find: function(nodeid) {\n            if (this._id == nodeid) return this;\n            for (var i = 0; i < this._nodes.length; i++) {\n                var n = this._nodes[i];\n                if (n.id() == nodeid) return n;\n                var cn = n.find(nodeid);\n                if (cn) return cn;\n            }\n            return null;\n        },\n\n        /**\n         * 获取一个指定索引的子节点\n         */\n        at: function(index) {\n            if (index >= 0 && index < this._nodes.length) {\n                return this._nodes[index];\n            }\n            return null;\n        },\n\n        /**\n         * 添加一个子节点\n         */\n        add: function(node) {\n            if (this._nodes.indexOf(node) >= 0) return null;\n            if (node.parent()) return null;\n            node._parent = this;\n            this._nodes.push(node);\n            return node;\n        },\n\n        /**\n         * 移除一个子节点\n         */\n        remove: function(node) {\n            var i = this._nodes.indexOf(node);\n            if (i >= 0) {\n                this._nodes.splice(i, 1);\n                node._parent = null;\n                return node;\n            }\n            return null;\n        },\n\n        /**\n         * 移除所有节点\n         */\n        removeAll: function() {\n            if (this._nodes.length > 0) {\n                for (var i = 0; i < this._nodes.length; i++) {\n                    this._nodes[i].removeAll();\n                    this._nodes[i]._parent = null;\n                }\n                this._nodes.splice(0, this._nodes.length);\n            }\n        },\n\n        /**\n         * 移除当前节点\n         */\n        removeSelf: function() {\n            if (this._parent) {\n                this._parent.remove(this);\n                this._parent = null;\n            }\n        },\n\n        /**\n         * 获取子节点的数量 \n         */\n        count: function() {\n            return this._nodes.length;\n        },\n\n        /**\n         * 搜索指定子节点的索引\n         */\n        indexOf: function(node) {\n            return this._nodes.indexOf(node);\n        },\n\n        /**\n         * 获取节点的深度级别\n         */\n        level: function() {\n            var ret = 0;\n\n            var temp = this;\n            while (temp.parent()) {\n                temp = temp.parent();\n\n                ret++;\n            }\n\n            return ret;\n        },\n\n        /**\n         * 获取根节点\n         */\n        root: function() {\n            var temp = this;\n\n            while (temp.parent()) {\n                temp = temp.parent();\n            }\n\n            return temp;\n        },\n\n\n\n        /**\n         * 获取第一个子节点\n         */\n        firstChild: function() {\n            if (this._nodes.length == 0) return null;\n\n            return this._nodes[0];\n        },\n\n        /**\n         * 获取同级的第一个节点\n         */\n        first: function() {\n\n            if (this._parent == null) return null;\n            if (this._parent._nodes.length == 0) return null;\n\n            return this._parent._nodes[0];\n        },\n\n        /**\n         * 获取同级的最后一个节点\n         */\n        last: function() {\n\n            if (this._parent == null) return null;\n            if (this._parent._nodes.length == 0) return null;\n\n            return this._parent._nodes[this._parent._nodes.length - 1];\n        },\n\n        /**\n         * 获取同级的上一个节点\n         */\n        prev: function() {\n\n            if (this._parent == null) return null;\n            var i = this._parent._nodes.indexOf(this);\n            if (i <= 0) return null;\n\n            return this._parent._nodes[i - 1];\n        },\n\n        /**\n         * 获取同级的下一个节点\n         */\n        next: function() {\n\n            if (this._parent == null) return null;\n            var i = this._parent._nodes.indexOf(this);\n            if (i >= this._parent._nodes.length) return null;\n            if (i < 0) return null;\n\n            return this._parent._nodes[i + 1];\n        },\n\n        /**\n         * 获取节点至根的逐级节点\n         */\n        parentNodes: function() {\n            var ret = new Array();\n\n            var temp = this;\n\n            while (temp) {\n                ret.splice(0, 0, temp);\n                temp = temp.parent();\n            }\n            return ret;\n        },\n\n        /**\n         * 获取与另一个节点的共同父级节点\n         */\n        parentBy: function(node) {\n            var p1 = this.parentNodes();\n            var p2 = node.parentNodes();\n\n            var ret = null;\n\n            for (var i = 0; i < p1.length; i++) {\n                var n1 = p1[i];\n                var n2 = null;\n\n                if (i < p2.length) {\n                    n2 = p2[i];\n                }\n\n                if (n1 == n2) ret = n1;\n                else break;\n            }\n\n            return ret;\n        }\n    }),\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 状态节点\n     */\n    FWS_MVC.FContext = cc.Class({\n        name: \"FContext\",\n        extends: FWS_MVC.FNode,\n\n        ctor: function() {\n            var id = arguments[0];\n            this.modules = new Array();\n        },\n\n        setModules: function() {\n            if (this.modules) {} else this.modules = new Array();\n\n            for (var i = 0; i < arguments.length; i++) {\n                var m = arguments[i];\n                if (this.modules.indexOf(m) >= 0) continue;\n                this.modules.push(m);\n            }\n            return this;\n        },\n\n        onEnterNode: function() {\n            FWS_MVC.FLog.data(\"状态\", \"onEnterNode: {0}\", this.path());\n\n            for (var i = 0; i < this.modules.length; i++) {\n                var m = this.modules[i];\n\n                try {\n                    m.onEnterNode();\n                } catch (err) {}\n\n                m.connect();\n            }\n        },\n\n        onLeaveNode: function() {\n            FWS_MVC.FLog.data(\"状态\", \"onLeaveNode: {0}\", this.path());\n\n            for (var i = 0; i < this.modules.length; i++) {\n                var m = this.modules[i];\n\n                try {\n                    m.onLeaveNode();\n                } catch (err) {}\n\n                m.disconnect();\n            }\n        }\n    }),\n\n    //──────────────────────────────────────────────────────────\n\n    /**\n     * 状态管理器\n     */\n    FWS_MVC.FContextManager = cc.Class({\n        name: \"FContextManager\",\n\n        statics: {\n            init: function(rootContext) {\n                FWS_MVC.FContextManager._root = rootContext;\n                FWS_MVC.FContextManager._current = null;\n                FWS_MVC.FContextManager._history = new Array();\n            },\n            root: function() {\n                return FWS_MVC.FContextManager._root;\n            },\n            current: function() {\n                return FWS_MVC.FContextManager._current;\n            },\n            back: function() {\n                if (FWS_MVC.FContextManager._history.length <= 1) return;\n                var c = FWS_MVC.FContextManager._history.pop();\n                c = FWS_MVC.FContextManager._history[FWS_MVC.FContextManager._history.length - 1];\n                FWS_MVC.FContextManager.goto(c);\n            },\n            gotoID: function(id) {\n                if (FWS_MVC.FContextManager._root) {\n                    var t = FWS_MVC.FContextManager._root.find(id);\n                    if (t) {\n                        FWS_MVC.FContextManager.goto(t);\n                    }\n                }\n            },\n            goto: function(context) {\n                if (context && context.root() == FWS_MVC.FContextManager._root && FWS_MVC.FContextManager._current != context) {\n                    var theParentNode = null;\n\n                    //关闭之前的无关节点\n                    if (FWS_MVC.FContextManager._current) {\n                        theParentNode = FWS_MVC.FContextManager._current.parentBy(context);\n\n                        var closeList = FWS_MVC.FContextManager._current.parentNodes();\n                        var closeListCount = closeList.length;\n\n                        for (var i = closeListCount - 1; i >= 0; i--) {\n                            var closeContext = closeList[i];\n\n                            if (closeContext == theParentNode) break;\n\n                            if (closeContext.onLeaveNode && typeof(closeContext.onLeaveNode) == \"function\") {\n                                closeContext.onLeaveNode();\n                            }\n                        }\n                    }\n                    //打开需要的新节点\n                    var found = false;\n                    var openList = context.parentNodes();\n                    var theParentNodeIsNull = true;\n                    if (theParentNode) theParentNodeIsNull = false;\n                    for (var i = 0; i < openList.length; i++) {\n                        var openContext = openList[i];\n                        if (theParentNodeIsNull) {\n                            if (openContext.onEnterNode && typeof(openContext.onEnterNode) == \"function\") {\n                                openContext.onEnterNode();\n                                continue;\n                            }\n                        }\n\n                        if (found) {\n                            if (openContext != theParentNode || theParentNodeIsNull) {\n                                if (openContext.onEnterNode && typeof(openContext.onEnterNode) == \"function\") {\n                                    openContext.onEnterNode();\n                                }\n                            }\n                        } else {\n                            if (openContext == theParentNode) {\n                                found = true;\n                            }\n                        }\n                    }\n\n                    FWS_MVC.FContextManager._current = context;\n                    FWS_MVC.FContextManager._history.push(context);\n                    FWS_MVC.FLog.info(\"状态\", \"切换至: {0}\", context.path());\n                }\n            }\n        }\n    })\n\n//──────────────────────────────────────────────────────────\n\n\n\nmodule.exports = FWS_MVC;"
  ]
}