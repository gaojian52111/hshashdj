{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAE/B,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,GAAG,CAAC,kBAAkB;;AAE/B,cAAU,EAAE;;AAER,oBAAY,EAAC,CAAC;;AAEd,mBAAW,EAAC;AACR,uBAAQ,IAAI;AACZ,gBAAI,EAAC,EAAE,CAAC,IAAI;SACf;;;AAGD,eAAO,EAAC,EAAE;KACb;;;AAGD,eAAW,EAAC,uBAAY;AACpB,eAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;KACzD;;AAED,UAAM,EAAE,kBAAY;AAChB,eAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;AACjD,YAAI,CAAC,OAAO,EAAE,CAAC;;KAGlB;AACD,aAAS,EAAC,qBAAU;AAChB,YAAI,CAAC,UAAU,EAAE,CAAC;KACrB;AACD,gCAA4B,EAAE,sCAAS,GAAG,EAAE,EAC3C;;;;;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const MVC = require(\"FWS_MVC\");\n//单个玩家的数据结构\nvar player = {};\ncc.Class({\n    extends: MVC.FMessageConnection,\n\n    properties: {\n        //本桌支持最大人数\n        maxplayerNum:0,\n        //任务头像模型\n        playerModel:{\n            default:null,\n            type:cc.Node\n        },\n        //哪些位置有人哪些位置没有人的数组 装的是每个人的结构体（头像，名字，详细信息）\n        //自己获取？\n        players:[]\n    },\n    //需要确认onEnterNode和 onLoad谁先加载\n    //如果onEnterNode先加载的话可以让这个函数先获取自己需要的东西 然后走onload\n    onEnterNode:function () {\n        console.log(\"!!!!!!playerLayerScirpt----onEnterNode\");\n    },\n    // use this for initialization\n    onLoad: function () {\n        console.log(\"!!!!!!playerLayerScirpt----onLoad\");\n        this.connect();\n        //向谁获取我上面的人的信息\n\n    },\n    onDestroy:function(){\n        this.disconnect();\n    },\n    onFMessage_initHeadLayerInfo: function(msg) {\n    }\n        // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"
  ]
}