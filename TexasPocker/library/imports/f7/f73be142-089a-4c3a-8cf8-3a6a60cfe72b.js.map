{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC;AACzB,QAAI,EAAE,aAAa;AACnB,WAAO,EAAE;;AAEL,aAAK,EAAE,eAAS,GAAG,EAAE;AACjB,gBAAI,GAAG,EAAE;AACL,uBAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;aACnC,MAAM;AACH,uBAAO,EAAE,CAAC;aACb;SACJ;;AAED,aAAK,EAAE,eAAS,GAAG,EAAE;AACjB,gBAAI,GAAG,EAAE;AACL,uBAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;aACnC,MAAM;AACH,uBAAO,EAAE,CAAC;aACb;SACJ;;AAED,YAAI,EAAE,cAAS,GAAG,EAAE;AAChB,mBAAO,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SACpD;;AAED,cAAM,EAAE,kBAAW;AACf,gBAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;AACtC,oBAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAC5B,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,wBAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACrB,wBAAI,EAAE,GAAG,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,AAAC,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;AACnD,uBAAG,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBAC5B;AACD,uBAAO,GAAG,CAAC;aACd,MAAM;AACH,uBAAO,EAAE,CAAC;aACb;SACJ;;AAED,gBAAQ,EAAE,kBAAS,QAAQ,EAAE,IAAI,EAAE;AAC/B,gBAAI,QAAQ,EAAE;AACV,oBAAI,GAAG,GAAG,QAAQ,GAAG,EAAE,CAAC;AACxB,oBAAI,IAAI,EAAE;AACN,yBAAK,IAAI,CAAC,IAAI,IAAI,EAAE;AAChB,4BAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,4BAAI,EAAE,GAAG,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7C,2BAAG,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBAC5B;iBACJ;AACD,uBAAO,GAAG,CAAC;aACd;AACD,mBAAO,EAAE,CAAC;SACb;KACJ;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const StringUtils = cc.Class({\n    name: \"StringUtils\",\n    statics: {\n        //去除前面的空白字符\n        ltrim: function(src) {\n            if (src) {\n                return src.replace(/^\\s+/g, \"\");\n            } else {\n                return \"\";\n            }\n        },\n        //去除后面的空白字符\n        rtrim: function(src) {\n            if (src) {\n                return src.replace(/\\s+$/g, \"\");\n            } else {\n                return \"\";\n            }\n        },\n        //去除前面和后面的空白字符\n        trim: function(src) {\n            return StringUtils.ltrim(StringUtils.rtrim(src));\n        },\n        //格式化字符串:  \"{0},{1},{2}...\", ...\n        format: function() {\n            if (arguments.length > 0 && arguments[0]) {\n                var ret = arguments[0] + \"\";\n                for (var i = 0; i < arguments.length; i++) {\n                    var a = arguments[i];\n                    var re = new RegExp(\"\\\\{\" + (i - 1) + \"\\\\}\", \"gm\");\n                    ret = ret.replace(re, a);\n                }\n                return ret;\n            } else {\n                return \"\";\n            }\n        },\n        //格式化字符串: \"{key1},{key2},{key3}...\"\n        formatEx: function(template, data) {\n            if (template) {\n                var ret = template + \"\";\n                if (data) {\n                    for (var k in data) {\n                        var v = data[k];\n                        var re = new RegExp(\"\\\\{\" + k + \"\\\\}\", \"gm\");\n                        ret = ret.replace(re, v);\n                    }\n                }\n                return ret;\n            }\n            return \"\";\n        }\n    }\n});\n\nmodule.exports = StringUtils;"
  ]
}